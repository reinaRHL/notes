'use strict';

Object.assign(patchModule, {
  patch: patchModule,
  uncache: uncacheModule,
  search: searchCache,
});

module.exports = patchModule;

function patchModule (sModule, sRequire) {
  sRequire.fresh = function (name) {
    uncacheModule(sModule, sRequire, name);
    return sRequire(name);
  };
}

function uncacheModule(sModule, sRequire, name) {
  searchCache(
    sModule,
    sRequire,
    name,
    item => {
      delete sRequire.cache[item.id];
    }
  );
  Object
    .keys(sModule.constructor._pathCache)
    .filter(file => file.indexOf(name) > 0)
    .forEach(file => {
      delete sModule.constructor._pathCache[file];
    });
}

function searchCache(sModule, sRequire, name, callback) {
  var filename = sRequire.resolve(name),
    item = sRequire.cache[filename];

  if (!item) { return; }

  traverse(item);

  function traverse(item) {
    item.children.forEach(
      child => traverse(child)
    );
    callback(item);
  }
}
